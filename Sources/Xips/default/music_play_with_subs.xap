var bMusicPlayWithSubsVisible0;
var nPlayCursor0;
var nPreviousPlayCursor0;
var nPlayScroll0;
var nPlayVisible0;
var nCurMusicPlayWithSubsItem0;
var subTitle0;
var b_one;
var b_two;
var b_three;
var b_four;
var b_five;
var CurrentSection;
var TempTitleList;
var CurFillDir;
var tempIconPath;
var arrMenuNames;
var arrMenuPaths;
var TotalSections;
var LastTitleLaunched;

var currentselection;
DEF theGlobal Transform
{ 
	visible false
	children
	[
		Shape
		{
			appearance Appearance { material Material {  } }
			geometry DEF theCellWallMesh Mesh
		}
	]
	scale 0 0 0
	translation 500 0 0
}

function GetCellWallType()
{
	var info = new Settings;
	info.file = "Q:\\System\\config.ini";
	info.section = "Dashboard Settings";
	var c = info.GetValue("Current Skin");

	theCellWallMesh.url = "Q:/skins/" + c + "/cellwall.xm"; 
}

function initialize()
{
	GetCellWallType();

}

function UpdateTrackList()
{
	var c = theMusicPlayWithSubs.children[0].children[0];
	var str = "";
	c.LowerPanelText.text = subTitle0;

	if (nPlayCursor0 < 0)
		nPlayScroll0 = 0;
	else if ( (nPlayCursor0 >= (nPlayVisible0 - 1)) & (nPreviousPlayCursor0 < nPlayCursor0) & (nPlayCursor0 > (nPlayScroll0 + (nPlayVisible0 - 1)) ))
		nPlayScroll0 = nPlayCursor0 - (nPlayVisible0 - 1);
	else if (nPlayCursor0 < nPlayScroll0)
		nPlayScroll0 = nPlayCursor0;

	nPreviousPlayCursor0 = nPlayCursor0;

	var nTracks0 = TempTitleList.length;

	if (nPlayScroll0 > 0)
		c.MU_morearrow_up.visible = true;
	else
		c.MU_morearrow_up.visible = false;

	if ((nPlayScroll0 + nPlayVisible0) < nTracks0)
		c.MU_morearrow_down.visible = true;
	else
		c.MU_morearrow_down.visible = false;

	var nHiliteItem0 = nPlayCursor0;
	if (nHiliteItem0 == -1)
		nHiliteItem0 = 0;

	for (var i = 0; i < nPlayVisible0; i = i + 1)
	{
		var n = nPlayScroll0 + i;
		if (n >= nTracks0)
		{
			c.TrackNames.children[i].children[0].geometry.text = "";
			c.TrackNumbers.children[i].children[0].geometry.text = "";
		}
		else
		{
			var strName0, strTime0;
			strName0 = TempTitleList[n];
			strTime0 = "";


			c.TrackNames.children[i].children[0].geometry.text = strName0;
			c.TrackNumbers.children[i].children[0].geometry.text = strTime0;

			if (n == nHiliteItem0)
			{
				c.TrackNames.children[i].SetScale(0.15, 0.15, 0.15);
				c.TrackNames.children[i].children[0].appearance.name = "CellEgg/Partsz";
				c.TrackNumbers.children[i].children[0].appearance.name = "CellEgg/Partsz";
			}
			else
			{               
				c.TrackNames.children[i].SetScale(0.13, 0.13, 0.13);
				c.TrackNames.children[i].children[0].appearance.name = "NavType";
				c.TrackNumbers.children[i].children[0].appearance.name = "NavType";
			}
		}
	}

	if (nTracks0 == 1)
		c.SubMenuHeaderText.text = nTracks0 + " " + theTranslator.Translate("Title");
	else
		c.SubMenuHeaderText.text = nTracks0 + " " + theTranslator.Translate("Titles");
}


DEF MusicPlayWithSubsViewpoint Viewpoint
{
	fieldOfView 1.287000
	orientation 0.200900 0.979000 0.034330 -0.345700
	position -47.889999 54.662001 -202.299994
	jump false

}

DEF musicPlayerMenu0Viewpoint Viewpoint
{
	fieldOfView 1.316000
	orientation -0.017440 -0.999800 0.000769 -0.088190
	position -45.230000 54.810001 -202.299994
	jump false
}

DEF visualizerViewpoint Viewpoint
{
	fieldOfView 1.287000
	orientation 0 1 0 0
	position -46.832825 55.132828 -204.205643
	jump false

}

function ShowMusicPlayWithSubs()
{
	var c = theMusicPlayWithSubs.children[0].children[0];
	//c.MU_L3_text_tracklist01.visible = false;
	c.MU_L3_text_tracklist01.visible = true;
	c.MU_L3_text_tracklist01.children[0].appearance.texture = audioVisualizer;
	//c.CD_STACK.SetAlpha(0);
	c.theMenuArm.SetRotation(0, 1, 0, 0);
	c.audio_panel.SetRotation(-1, 0, 0, -3.246000);
	c.audio_panel.SetTranslation(-45.549999, 57.18, -203.800003);
	c.back1.SetTranslation(-48.990000, 52.450001, -205.000000); 
	c.back1.SetRotation(0.000000, 1.000000, 0.000000, -0.130900);
	c.select1.SetTranslation(-45.280000, 52.339999, -204.000000);   
	c.select1.SetRotation(0.000000, 1.000000, 0.000000, -0.497400);
	UpdateMusicPlayWithSubs();
	MusicPlayWithSubsViewpoint.isBound = true;
	bMusicPlayWithSubsVisible0 = true;
}

function StartMusicEditor()
{
	var c = theMusicPlayWithSubs.children[0].children[0];
	//c.MU_L3_text_tracklist01.visible = false;
	c.MU_L3_text_tracklist01.visible = true;
	c.theScreenOutput.visible = false;
	c.MU_L3_text_tracklist01.children[0].appearance.texture = audioVisualizer;
	//c.CD_STACK.SetAlpha(0);
	c.back1.SetTranslation(-47.340000, 52.809999, -204.300003); 
	c.back1.SetRotation(0.000000, -1.000000, 0.000000, -0.340300);
	c.select1.SetTranslation(-43.539999, 52.740002, -204.800003);   
	c.select1.SetRotation(-0.014820, 0.970100, -0.242300, -0.143900);
	c.theMenuArm.SetRotation(0, 1, 0, 2);
	c.audio_panel.SetRotation(1, 0, 0, -0.02618);
	c.audio_panel.SetTranslation(-45.549999, 55.07, -204.5);
	nPlayScroll0 = 0;
	c.play_buttons.visible = false;
	c.buttons_copy.visible = false;
	c.buttons_edit.visible = false;
	nPlayCursor0 = 0;
	c.theIcons.visible = true;
	musicPlayerMenu0Viewpoint.isBound = true;
	bMusicPlayWithSubsVisible0 = false;
	UpdateTrackList();
}

function EnterMusicPlay()
{
	var c = theMusicPlayWithSubs.children[0].children[0];
	TotalSections = 0;
	arrMenuNames = new Array;
	arrMenuPaths = new Array;
	c.theMenuButtons.children[0].visible = false;
	c.theMenuButtons.children[1].visible = false;
	c.theMenuButtons.children[2].visible = false;
	c.theMenuButtons.children[3].visible = false;
	c.theMenuButtons.children[4].visible = false;
	b_one = GetSavedValue("Applications Menu","Name");  //get button names for titlemenus from config
	b_two = GetSavedValue("Dashboards Menu","Name");
	b_three = GetSavedValue("Emulators Menu","Name");
	b_four = GetSavedValue("Games Menu","Name");
	b_five = GetSavedValue("Homebrew Menu","Name");
	if(b_five == "") b_five = "none";
	
	if(b_one != "none")
	{
		arrMenuNames[TotalSections] = b_one;
		arrMenuPaths[TotalSections] = GetSavedValue("Applications Menu","Path");
		TotalSections = TotalSections + 1;
	}
	if(b_two != "none")
	{
		arrMenuNames[TotalSections] = b_two;
		arrMenuPaths[TotalSections] = GetSavedValue("Dashboards Menu","Path");
		TotalSections = TotalSections + 1;
	}
	if( b_three != "none")
	{
		arrMenuNames[TotalSections] = b_three;
		arrMenuPaths[TotalSections] = GetSavedValue("Emulators Menu","Path");
		TotalSections = TotalSections + 1;
	}
	if( b_four != "none")
	{
		arrMenuNames[TotalSections] = b_four;
		arrMenuPaths[TotalSections] = GetSavedValue("Games Menu","Path");
		TotalSections = TotalSections + 1;
	}
	if( b_five != "none")
	{
		arrMenuNames[TotalSections] = b_five;
		arrMenuPaths[TotalSections] = GetSavedValue("Homebrew Menu","Path");
		TotalSections = TotalSections + 1;
	}
	
	nCurMusicPlayWithSubsItem0 = 0;
	nPlayCursor0 = 0;
	nPreviousPlayCursor0 = 0;
	nPlayScroll0 = 0;
	nPlayVisible0 = 9;
	
	c.TitleText1.text = theTranslator.Translate("Xbox Hard Disk");     //menu title
	//c.MenuMetaText.text = "\r.: Free Space :." + "\rC: " + FormatDriveSpace("F:\\", "free") + " of " + FormatDriveSpace("F:\\", "total") + "\rE: " + FormatDriveSpace("E:\\", "free") + " of " + FormatDriveSpace("E:\\", "total") + "\rF: " + FormatDriveSpace("F:\\", "free") + " of " + FormatDriveSpace("F:\\", "total");
	//c.MenuMetaText.text = "\r.: Free Space :." + "\rF: " + FormatDriveSpace("F:\\", "free") + " of " + FormatDriveSpace("F:\\", "total");
	ShowMusicPlayWithSubs();
	LastTitleLaunched = GetSavedValue("LauncherMenu","LastTitleLaunched");

}

//sets up the root menu text etc.
function UpdateMusicPlayWithSubs()
{
	var c = theMusicPlayWithSubs.children[0].children[0];
	
	for (var i = 0; i < TotalSections; i = i + 1)
	{
		c.theMenuButtons.children[i].visible = true;
		c.theMenuButtons.children[i].children[1].children[0].geometry.text = arrMenuNames[i];
		if (i == nCurMusicPlayWithSubsItem0)
		{
			c.theMenuButtons.children[i].children[0].appearance.material.name = "GameHilite";
			c.theMenuButtons.children[i].children[0].appearance.texture.url = "GameHilite_01.bmp";
			c.theMenuButtons.children[i].children[1].children[0].appearance.name = "HilightedType";
		}
		else
		{
			c.theMenuButtons.children[i].children[0].appearance.material.name = "GameHilite";
			c.theMenuButtons.children[i].children[0].appearance.texture.url = "outline.tga";
			c.theMenuButtons.children[i].children[1].children[0].appearance.name = "NavType";
		}
	}
	c._button_surround.visible = (TotalSections >= 3);
	//c.New_Line11.visible = (TotalSections >= 3);
	c._button_surround_0.visible = (TotalSections < 3);
}

DEF theMusicPlayWithSubs Level
{
	archive "music_play_edit.xip"

	children
	[
		Inline
		{
			url "music_play_edit/menu.xap"

			function onLoad() 
			{
				var c = theMusicPlayWithSubs.children[0].children[0];
				c.MU_L3_panel_playicon.visible = false;
				c.MU_L3_icon_repeat.visible = false;
				c.MU_L3_text_random_0.visible = false;
				c.MU_L3_icon_stop_02.visible = false;
				c.MU_L3_icon_pause_0.visible = false;
				c.theIcons.visible = false;
				c.CD_STACK.visible = false;
				
				c.New_panel_meta.visible = false; //NEW//
				//c.New_Line11.visible = false; //NEW//
				//c.New_Line02.visible = false; //NEW//
				c.MenuMetaText.text = ""; //NEW//

				EnterMusicPlay();
			}
		}
	]

	shell Transform
	{
		scale 6.3176 6.3176 6.3176

		translation -47.220001 55 -204.300003
		children
		[
			DEF theMusicPlayWithSubsMenuShellSpinner Spinner
			{
				rpm 0
				axis 0 0 0
				children
				[
					DEF theMusicPlayWithSubsMenuShellWaver Waver
					{
						rpm 2.25//rpm 2
						children
						[
							Shape
							{
								appearance Appearance
								{
									material MaxMaterial { name "InnerWall_01" }
									texture ImageTexture
									{
										alpha true
										url "cellwall.xbx"
									}
								}
								geometry USE theCellWallMesh
							}
							Shape
							{
								appearance Appearance { material MaxMaterial { name "InnerWall_02" } }
								geometry Sphere { radius 1 }
							}
						]
					}
				]
			}
		]
	}

	tunnel Transform
	{
		children
		[
			Shape
			{
				appearance Appearance { material MaxMaterial { name "Tubes" } }
				geometry Mesh { url "Music/Tunnel_02-FACES.xm" }
			}
		]
	}

	path USE MusicPlayWithSubsViewpoint

	control DEF theMusicPlayWithSubsJoystick Joystick
	{
		function OnADown()
		{
			theMusicPlayWithSubs.children[0].children[0].MU_select_pod_HL.children[0].appearance.material.param = 1;

			PlaySoundA();

			if (bMusicPlayWithSubsVisible0)
			{
				var a = arrMenuNames[nCurMusicPlayWithSubsItem0];
				if(a == "")
				{
					return;
				}
				else
				{
					CurFillDir = arrMenuPaths[nCurMusicPlayWithSubsItem0];
					subTitle0 = a;
					TempTitleList = FillMenuList(CurFillDir);
					thePlayerPanelIn.Play();
					StartMusicEditor();
				}
			}
			else
			{
				LaunchItem(CurFillDir,TempTitleList[nPlayCursor0]);
			}
			
		}
		
		function OnBDown()
		{
			PlaySoundB();
			
			if (bMusicPlayWithSubsVisible0)
			{
				theMusicPlayWithSubs.children[0].children[0].MU_back_pod_HL.children[0].appearance.material.param = 1;
				theGamesMenuOut.Play();
				if(menuStyle == "MS") { theMainMenu.GoBackTo(); }
				else { GoToBSX(); }
			}
			else
			{
				theMusicPlayWithSubs.children[0].children[0].MU_back_pod_HL.children[0].appearance.material.param = 1;
				ShowMusicPlayWithSubs();
				thePlayerPanelOut.Play();
			}
		}
		
		function OnXDown()
		{
			if(LastTitleLaunched != "")
			{
				PlaySoundA();
				var x = LastTitleLaunched.substr(0,LastTitleLaunched.indexOf("-"));
				var y = LastTitleLaunched.substr(LastTitleLaunched.indexOf("-") + 1);
				AskQuestion("You are about to launch " + y + " from the " + x + " folder.\n\nDo you wish to continue?", "LaunchItem(\"" + x + "\",\"" + y + "\")","",0);
			}
		}
		
		function OnLeftThumbMoveRight()  
		{ 
			if (bMusicPlayWithSubsVisible0 == false)
			{
				var a = (TempTitleList.length - 1);
				if (nPlayCursor0 + 9 <= a)
				{
					nPlayCursor0 = nPlayCursor0 + 9;
				}
				else if(nPlayCursor0 == a)
				{
					return;
				} 
				else if(a - nPlayCursor0 < 9)
				{
					nPlayCursor0 = a;
				}
				PlaySoundMenuChange();
				UpdateTrackList();
			}
		}
		
		function OnLeftThumbMoveLeft()  
		{  
			if (bMusicPlayWithSubsVisible0 == false)
			{
				var a = (TempTitleList.length - 1);
				if (nPlayCursor0 - 9 >= 0)
				{
					nPlayCursor0 = nPlayCursor0 - 9;
				}
				else if(nPlayCursor0 == 0)
				{
					return;
				} 
				else if(nPlayCursor0 - 9 < 9)
				{
					nPlayCursor0 = 0;
				}
				PlaySoundMenuChange();
				UpdateTrackList();
			}
		}
		
		function OnLeftThumbMoveUp()
		{
			if (bMusicPlayWithSubsVisible0)
			{
				if (nCurMusicPlayWithSubsItem0 > 0)
				{
					PlaySoundMenuChange();
					nCurMusicPlayWithSubsItem0 = nCurMusicPlayWithSubsItem0 - 1;
					UpdateMusicPlayWithSubs();
				}
			}
			else
			{
				var a = (TempTitleList.length - 1);
				if (nPlayCursor0 <= 0)
				{
					nPlayCursor0 = a;
				}
				else
				{
					nPlayCursor0 = nPlayCursor0 - 1;
				}
				PlaySoundMenuChange();
				UpdateTrackList();
			}
		}
		
		function OnLeftThumbMoveDown()
		{
			if (bMusicPlayWithSubsVisible0)
			{
				if (nCurMusicPlayWithSubsItem0 < TotalSections - 1)
				{
					PlaySoundMenuChange();
					nCurMusicPlayWithSubsItem0 = nCurMusicPlayWithSubsItem0 + 1;
					UpdateMusicPlayWithSubs();
				}
			}
			else
			{
				var a = (TempTitleList.length - 1);
				if (nPlayCursor0 == a)
				{
					nPlayCursor0 = 0;
				}
				else
				{
					nPlayCursor0 = nPlayCursor0 + 1;
				}
				PlaySoundMenuChange();
				UpdateTrackList();
			}
		}
	}
	
	function OnActivate()
	{
		
		if (children[0].children.length() > 0)
		{
			EnterMusicPlay();
		}
	}
}

