var nCurPlayerMenuItem;
var orbCount;
var OrbMenuList;
var orbScroll;
var orbButton;
var orbSelect;
var currentOrb;

DEF theGlobal Transform
{ 
    visible false
 	children
  	[
  		Shape
  		{
  			appearance Appearance { material Material {  } }
  			geometry DEF theCellWallMesh Mesh
  		}
  	]
  	scale 0 0 0
  	translation 500 0 0
}

function GetCellWallType()
{
	var info = new Settings;
	info.file = "Q:\\System\\config.ini";
	info.section = "Dashboard Settings";
	var c = info.GetValue("Current Skin");

	theCellWallMesh.url = "Q:/skins/" + c + "/cellwall.xm"; 
}

function initialize()
{
    GetCellWallType();
    orbSelect = 0;
    orbScroll = 0;
    orbButton = 0;
    nCurPlayerMenuItem = 1;
}

function GetOrbs()
{
	var b = new Folder;
	b.path = "Q:\\orbs";
	orbCount = b.subFolders.length();
	var orbsArray = new Array();
	var a;

	currentOrb = GetSavedValue("Dashboard Settings","Current Orb");

	for(var i = 0; i < orbCount; i = i + 1)
	{
		a = b.subFolders[i].name;
		orbsArray[i] = a.charAt(0).toUpperCase() + a.substr(1,a.length());
	}
	OrbMenuList = orbsArray.sort();
}

function UpdateOrbMenu()
{
		var c = theOrbsMenu.children[0].children[0];
		
    for(var i = 0; i < 9; i = i + 1)
    {
     		var n = orbScroll + i;
        	
        if(n >= orbCount)
        {
        		c.OrbNames.children[i].visible = false;
        }
        else
        {
        		var str;
        		str = OrbMenuList[n];
						c.OrbNames.children[i].visible = true;
						c.OrbNames.children[i].visible = true;
						c.OrbNames.children[i].children[0].appearance.material.name = "CellEgg/Partsz";
						c.OrbNames.children[i].children[0].geometry.text = str;
             		
						if(i == orbButton)
						{
								c.OrbNames.children[i].children[0].appearance.material.name = "NavType";
						}
				}
		}
		c.MU_L3_button_no.children[0].appearance.material.name = "FlatSurfaces";
		c.MU_L3_button_yes.children[0].appearance.material.name = "FlatSurfaces";

		c.S_Home_text_no.children[0].appearance.material.name = "NavType";
		c.S_Home_text_yes.children[0].appearance.material.name = "NavType";

    if (nCurPlayerMenuItem == 0)
    {
				c.MU_L3_button_yes.children[0].appearance.material.name = "GameHilite";
				c.S_Home_text_yes.children[0].appearance.material.name = "Material #133";
    }
    if (nCurPlayerMenuItem == 1)
    {
				c.MU_L3_button_no.children[0].appearance.material.name = "GameHilite";
				c.S_Home_text_no.children[0].appearance.material.name = "Material #133";
		}
}

function StartOrbMenu()
{
    var c = theOrbsMenu.children[0].children[0];
    nCurPlayerMenuItem = 1;
}

function ShowOrbInfo()
{
	var info = new Settings;
	info.file = "Q:\\orbs\\" + OrbMenuList[orbSelect] + "\\" + OrbMenuList[orbSelect] + ".xbx";
	info.section = "OrbInfo";
	var author = info.GetValue("Author");
	var date = info.GetValue("DateCreated");
	var version = info.GetValue("Version");
	var madeusing = info.GetValue("MadeUsing");
	var credits = info.GetValue("Credits");
	TellUser(theTranslator.Translate("Author: " + author + "\nDate: " + date + "\nVersion: " + version + "\nMade with: " + madeusing + "\nCredits: " + credits),"nada()");
}

function DoReset()
{
	theRestartLevel.GoTo();
}

function DoAction()
{
    var c = theOrbsMenu.children[0].children[0];
    var info = new Settings;
    info.file = "Q:\\system\\config.ini";
    info.section = "Dashboard Settings";
    if (nCurPlayerMenuItem == 1) { ShowOrbInfo(); }
    else if (nCurPlayerMenuItem == 0)
    {
        //theConfig.ChangeOrb( OrbMenuList[orbSelect] );
	info.SetValue("Current Orb",OrbMenuList[orbSelect]);
        AskQuestion("Orb change will not take full effect until you restart the dash.  Would you like to restart now?", "theOrbsInline.children[0].DoReset()", "", 0);
    }
}
var restarting;
DEF theRestartLevel Level
{
    function OnArrival()
    {
        DisableAmbientAudio();
        ClosePopup();
        restarting = true;
        if(theConfig.GetVideoMode() == 2) { theXboxLogo16x9Background.isBound = true; }
        else { theXboxLogo4x3Background.isBound = true; }
    }

    behavior
    {
        sleep 1.1;
        if(restarting) { theConfig.Reset(); }
    }

    function OnActivate()
    {
        DisableAmbientAudio();
        ClosePopup();
        if(theConfig.GetVideoMode() == 2) { theXboxLogo16x9Background.isBound = true; }
        else { theXboxLogo4x3Background.isBound = true; }
    }
}

DEF theOrbsMenu Level
{
	archive "Settings_Panel.xip"

	children
	[
		Inline
		{
			url "Settings_Panel/default4.xap"

			function onLoad()
			{
				StartOrbMenu();
				GetOrbs();
				UpdateOrbMenu();
			}
		}
	]

	path Viewpoint
	{
		fieldOfView 1.287000
		orientation 0.103700 0.994600 0.006310 -0.122200
		position 96.940002 4.728000 -248.600006
		jump false
	}

    shell Transform
    {
        scale 6.15 6.15 6.15
        translation 97.67 4.819000 -251.870003
        children
        [
            DEF theSettingsMenuShellSpinner Spinner
            {
				rpm 0
				axis 0 0 0
                children
                [
					DEF theSettingsMenuShellWaver Waver
					{
						rpm 2.25//rpm 0.75
						children
						[
							Shape
							{
								appearance Appearance
								{
									material MaxMaterial { name "InnerWall_01" }
									texture ImageTexture { alpha true url "cellwall.xbx" }
								}
								geometry USE theCellWallMesh
							}
							Shape
							{
								appearance MaxMaterial { name "InnerWall_02" }
								geometry Sphere
							}
						]
					}
				]
			}
        ]
    }

    control DEF theMusicPlayJoystick Joystick
    {
        function OnADown()
        {
						DoAction();
        }

        function OnBDown()
        {
        //theConfig.ChangeOrb( orbName );
            PlaySoundB();
						GoToSettings();
						theMusicSubMenuOut.Play();
        }

        function OnLeftThumbMoveLeft()
        {
            if (nCurPlayerMenuItem == 0) { return; }
            else { nCurPlayerMenuItem = 0; }
            UpdateOrbMenu();
        }

        function OnLeftThumbMoveRight()
        {
            if (nCurPlayerMenuItem == 1) { return; }
            else { nCurPlayerMenuItem = 1; }
            UpdateOrbMenu();
        }

        function OnLeftThumbMoveUp()
        {
                        if (orbSelect <= 0) { return; }
                        PlaySoundMenuChange();
                        orbSelect = orbSelect - 1;
                        if (orbButton == 0) { orbScroll = orbScroll - 1; }
                        else { orbButton = orbButton - 1; }
                        //theConfig.ChangeOrb( OrbMenuList[orbSelect] );
                        UpdateOrbMenu();
        }

        function OnLeftThumbMoveDown()
        {
                if (orbSelect >= orbCount - 1) {  return; }
                        PlaySoundMenuChange();
                        orbSelect = orbSelect + 1;
                        if (orbButton == 8) { orbScroll = orbScroll + 1; }
                        else { orbButton = orbButton + 1; }
                        //theConfig.ChangeOrb( OrbMenuList[orbSelect] );
                        UpdateOrbMenu();                        
        }
 function OnMoveLeft()
        {
            if (nCurPlayerMenuItem == 0) { return; }
            else { nCurPlayerMenuItem = 0; }
            UpdateOrbMenu();
        }

        function OnMoveRight()
        {
            if (nCurPlayerMenuItem == 1) { return; }
            else { nCurPlayerMenuItem = 1; }
            UpdateOrbMenu();
        }

        function OnMoveUp()
        {
                        if (orbSelect <= 0) { return; }
                        PlaySoundMenuChange();
                        orbSelect = orbSelect - 1;
                        if (orbButton == 0) { orbScroll = orbScroll - 1; }
                        else { orbButton = orbButton - 1; }

                        UpdateOrbMenu();
        }

        function OnMoveDown()
        {
                if (orbSelect >= orbCount - 1) {  return; }
                        PlaySoundMenuChange();
                        orbSelect = orbSelect + 1;
                        if (orbButton == 8) { orbScroll = orbScroll + 1; }
                        else { orbButton = orbButton + 1; }
                        //theConfig.ChangeOrb( OrbMenuList[orbSelect] );
                        UpdateOrbMenu();                        
        }
    }

	function OnActivate()
    {
        EnableAudio();
    }
}
